apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1beta2","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"prometheus"},"name":"prometheus","namespace":"ns-monitor"},"spec":{"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"prometheus"}},"template":{"metadata":{"labels":{"app":"prometheus"}},"spec":{"containers":[{"image":"prom/prometheus:latest","name":"prometheus","ports":[{"containerPort":9090,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/etc/prometheus/","name":"prometheus-config-volume"},{"mountPath":"/prometheus/","name":"prometheus-storage-volume"}]}],"securityContext":{"fsGroup":65534,"runAsUser":65534},"serviceAccountName":"prometheus","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"}],"volumes":[{"configMap":{"defaultMode":420,"name":"prometheus-conf"},"name":"prometheus-config-volume"},{"emptyDir":{},"name":"prometheus-storage-volume"}]}}}}
  creationTimestamp: null
  generation: 1
  labels:
    app: prometheus
  name: prometheus
  namespace: ns-monitor
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
    spec:
      containers:
      - image: prom/prometheus:latest
        imagePullPolicy: IfNotPresent
        name: prometheus
        args:
        - "--web.enable-lifecycle"
        - "--config.file=/etc/prometheus/prometheus.yml"
        ports:
        - containerPort: 9090
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus/
          name: prometheus-config-volume
        - mountPath: /prometheus/
          name: prometheus-storage-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      serviceAccount: prometheus
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-conf
        name: prometheus-config-volume
      - emptyDir: {}
        name: prometheus-storage-volume
status: {}
